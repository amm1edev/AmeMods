#meta develoeper: @thisLyomi & @AmekaMods

from telethon.tl.types import Message
import os
import yt_dlp
from .. import loader, utils

@loader.tds
class YouTubeToMP3Mod(loader.Module):
    """üéµ –°–∫–∞—á–∏–≤–∞–µ—Ç mp3 –∏–∑ –≤–∏–¥–µ–æ –∏ –ø–ª–µ–π–ª–∏—Å—Ç–æ–≤ YouTube"""
    strings = {"name": "YouTubeToMP3"}

    async def ytmp3cmd(self, message: Message):
        """<—Å—Å—ã–ª–∫–∞> - —Å–∫–∞—á–∏–≤–∞–µ—Ç mp3 —Å YouTube"""
        args = utils.get_args_raw(message)
        if not args:
            await message.edit("‚ùå <b>–£–∫–∞–∂–∏ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ —Å YouTube.</b>")
            return
        
        url = args.strip()
        await message.edit("‚è≥ <b>–ó–∞–≥—Ä—É–∂–∞—é MP3...</b>")
        
        try:
            output_path = "downloads"
            os.makedirs(output_path, exist_ok=True)
            ydl_opts = {
                'format': 'bestaudio/best',
                'outtmpl': f'{output_path}/%(title)s.%(ext)s',
                'postprocessors': [{
                    'key': 'FFmpegExtractAudio',
                    'preferredcodec': 'mp3',
                    'preferredquality': '192',
                }],
            }

            with yt_dlp.YoutubeDL(ydl_opts) as ydl:
                info = ydl.extract_info(url, download=True)
                file_name = ydl.prepare_filename(info).replace('.webm', '.mp3').replace('.m4a', '.mp3')

            await message.client.send_file(
                message.chat_id, file_name, caption=f"üéµ <b>MP3 –∏–∑ –≤–∏–¥–µ–æ:</b> <a href='{url}'>—Å—Å—ã–ª–∫–∞</a>", parse_mode="html"
            )
            await message.delete()
            os.remove(file_name)
        except Exception as e:
            await message.edit(f"‚ùå <b>–û—à–∏–±–∫–∞:</b> {e}")

    async def ytplmp3cmd(self, message: Message):
        """<—Å—Å—ã–ª–∫–∞> [—á–∏—Å–ª–æ] - —Å–∫–∞—á–∏–≤–∞–µ—Ç mp3 –∏–∑ –ø–ª–µ–π–ª–∏—Å—Ç–∞ YouTube. –ß–∏—Å–ª–æ - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–≥—Ä—É–∂–∞–µ–º—ã—Ö mp3"""
        args = utils.get_args_raw(message)
        if not args:
            await message.edit("‚ùå <b>–£–∫–∞–∂–∏ —Å—Å—ã–ª–∫—É –Ω–∞ –ø–ª–µ–π–ª–∏—Å—Ç YouTube.</b>")
            return
        
        args = args.split()
        url = args[0].strip()
        limit = int(args[1]) if len(args) > 1 else None

        await message.edit("‚è≥ <b>–ü—Ä–æ–≤–µ—Ä—è—é –ø–ª–µ–π–ª–∏—Å—Ç...</b>")

        try:
            output_path = "downloads"
            os.makedirs(output_path, exist_ok=True)
            ydl_opts = {
                'format': 'bestaudio/best',
                'outtmpl': f'{output_path}/%(title)s.%(ext)s',
                'postprocessors': [{
                    'key': 'FFmpegExtractAudio',
                    'preferredcodec': 'mp3',
                    'preferredquality': '192',
                }],
                'extract_flat': True,
            }

            with yt_dlp.YoutubeDL(ydl_opts) as ydl:
                playlist_info = ydl.extract_info(url, download=False)
                entries = playlist_info.get("entries", [])
                total_videos = len(entries)

                if limit is not None and (limit < 1 or limit > total_videos):
                    await message.edit(f"‚ùå <b>–û—à–∏–±–∫–∞:</b> —á–∏—Å–ª–æ —Ç—Ä–µ–∫–æ–≤ –ø—Ä–µ–≤—ã—à–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∏–¥–µ–æ –≤ –ø–ª–µ–π–ª–∏—Å—Ç–µ ({total_videos}).")
                    return

                download_count = limit if limit else total_videos
                await message.edit(f"‚è≥ <b>–ó–∞–≥—Ä—É–∂–∞—é {download_count} —Ç—Ä–µ–∫–æ–≤ –∏–∑ –ø–ª–µ–π–ª–∏—Å—Ç–∞...</b>")

                ydl_opts.pop('extract_flat')  # –£–±–∏—Ä–∞–µ–º, —á—Ç–æ–±—ã –∑–∞–≥—Ä—É–∂–∞—Ç—å —Ñ–∞–π–ª—ã
                ydl_opts['playlistend'] = download_count

                with yt_dlp.YoutubeDL(ydl_opts) as ydl:
                    ydl.download([url])

                for file in os.listdir(output_path):
                    if file.endswith(".mp3"):
                        await message.client.send_file(
                            message.chat_id, f"{output_path}/{file}", caption=f"üéµ <b>–¢—Ä–µ–∫:</b> {file}", parse_mode="html"
                        )
                        os.remove(f"{output_path}/{file}")
                        
                await message.edit(f"‚úÖ <b>–ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –¢—Ä–µ–∫–æ–≤: {download_count}.</b>")
        except Exception as e:
            await message.edit(f"‚ùå <b>–û—à–∏–±–∫–∞:</b> {e}")
